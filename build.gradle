buildscript {
	ext {
		kotlinVersion = '1.2.50'
		springBootVersion = '2.0.2.RELEASE'
		sporttagPSAVersion = '1.0.1'
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
        
	}
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"

        // Kotlin all open to make specific classes open when compiling e.g. spring's @Configuration classes
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"

        // JUnit Platform TestEngine for Spek
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0"
	}
}

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

version = "${sporttagPSAVersion}"

allprojects {

    apply plugin: 'idea'
    apply plugin: 'kotlin'

	sourceCompatibility = 1.8
    targetCompatibility = 1.8

	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	repositories {
		maven { url "http://dl.bintray.com/jetbrains/spek" }
		maven { url "https://dl.bintray.com/kotlin/kotlin-dev/"}
		mavenCentral()
	}
	
	dependencies {
		compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

        // common testing libraries
        testCompile 'org.mockito:mockito-core:2.9.0'
        // exclude mockito, because we need a different version
        testCompile ('com.nhaarman:mockito-kotlin:1.5.0') {
            exclude group: 'org.mockito'
        }
        testCompile 'org.jetbrains.spek:spek-api:1.1.5'
        testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
        testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: '1.2.50'

    }
}

project(":filesystem") {
    
    apply plugin: 'kotlin-spring'
    
	dependencies {
		compile group: 'org.springframework.boot', name: 'spring-boot', version: "$springBootVersion"
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	maven {
		url "https://jaspersoft.artifactoryonline.com/jaspersoft/jr-ce-releases/"
	}
    mavenCentral()
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-devtools")

    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile "joda-time:joda-time:2.9.9"
	compile "com.deliveredtechnologies:rulebook-core:0.8"
	compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.4.1'
	
	compile project(":rules")
    compile project(":filesystem")

	compile 'com.github.BilledTrain380:Alberta:1.0.0'
	
    // database dependencies
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.flywaydb:flyway-core')
	runtime('com.h2database:h2')

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-oauth2
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: '2.0.0.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.9.RELEASE'

    // https://mvnrepository.com/artifact/org.passay/passay
    compile group: 'org.passay', name: 'passay', version: '1.3.1'

    // to enable thymeleaf legacy html5 mode
	compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'

	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
	
	// webjars
	compile 'org.webjars:jquery:3.2.0'
	compile 'org.webjars:bootstrap:4.1.3'
	compile 'org.webjars:font-awesome:5.4.1'

    // exclude mockito, because we need a different version
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.mockito'
    }
}

// copy resources to see resource changes
task copyResources(type: Copy) {
	from 'src/main/resources/'
	into 'build/resources/main/'
}