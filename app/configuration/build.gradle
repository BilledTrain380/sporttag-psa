dependencies {
    implementation project(":app:dto")
    implementation project(":app:setup")

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.cloud:spring-cloud-starter-oauth2"

    implementation "org.springdoc:springdoc-openapi-ui"
    implementation "org.springdoc:springdoc-openapi-kotlin"
    implementation "org.springdoc:springdoc-openapi-security"

    implementation "org.springframework.cloud:spring-cloud-starter-oauth2"
    implementation "org.springframework.security:spring-security-jwt"
    implementation "io.jsonwebtoken:jjwt"

    implementation "org.flywaydb:flyway-core"
    runtimeOnly "com.h2database:h2"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

task generateBuildInfo {
    def buildInfoFile = file("src/main/resources/build-info.json")
    inputs.property("project version", project.version)
    inputs.property("bulid hash", commitHash)
    inputs.property("build env", isReleaseBuild)
    outputs.file buildInfoFile
    doLast {
        def jsonOutput = groovy.json.JsonOutput.prettyPrint(groovy.json.JsonOutput.toJson([
                version: project.version,
                hash: commitHash,
                build_time: Instant.now().toString(),
                environment: isReleaseBuild? "prod" : "dev"
        ]))
        buildInfoFile.text = jsonOutput
        println(jsonOutput)
    }
}

processResources.dependsOn generateBuildInfo
