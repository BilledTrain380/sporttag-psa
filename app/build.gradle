buildscript {
    ext {
        kotlinVersion = '1.3.72'
        springBootVersion = '2.2.7.RELEASE'
        sonarLogin = System.getenv("SONAR_LOGIN")
        sourceBranch = System.getenv("BUILD_SOURCEBRANCHNAME")
        pullRequestSourceBranch = System.getenv("SYSTEM_PULLREQUEST_SOURCEBRANCH")
        pullRequestTargetBranch = System.getenv("SYSTEM_PULLREQUEST_TARGETBRANCH")
        pullRequestNumber = System.getenv("SYSTEM_PULLREQUEST_PULLREQUESTNUMBER")
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
}

plugins {
    id "java"
    id "idea"
    id "jacoco"
    id "org.sonarqube" version "2.8"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
    id "org.jlleitschuh.gradle.ktlint" version "9.2.1" apply false
    id "org.springframework.boot" version "$springBootVersion" apply false
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.61" apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE" apply false
}

sonarqube {
    properties {
        property "sonar.projectKey", "BilledTrain380_sporttag-psa"
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.projectVersion", "$version"
        property "sonar.links.homepage", "https://billedtrain380.github.io/sporttag-psa/"
        property "sonar.links.ci", "https://dev.azure.com/billedtrain380/PSA"
        property "sonar.links.scm", "https://github.com/BilledTrain380/sporttag-psa"
        property "sonar.organization", "billedtrain380"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.log.level", "DEBUG"
        property "sonar.login", "$sonarLogin"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/app/**/build/reports/jacoco/**/*.xml"

        if (pullRequestNumber != null) {
            property "sonar.pullrequest.key", "$pullRequestNumber"
            property "sonar.pullrequest.branch", "$pullRequestSourceBranch"
            property "sonar.pullrequest.base", "$pullRequestTargetBranch"
            property "sonar.pullrequest.provider", "github"
            property "sonar.pullrequest.github.repository", "BilledTrain380/sporttag-psa"
        } else {
            property "sonar.branch.name", "$sourceBranch"
        }
    }
}

project(":app:starter") {
    apply plugin: 'application'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
}

configure([
        project(':app:core'),
        project(':app:shared'),
        project(':app:dto'),
        project(":app:starter"),
]) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven { url "https://dl.bintray.com/jetbrains/spek" }
        maven { url "https://jaspersoft.jfrog.io/jaspersoft/jr-ce-releases" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev/" }
    }

    dependencyManagement {
        dependencies {
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
            dependency "io.jsonwebtoken:jjwt:0.9.1"

            dependency "org.springframework.cloud:spring-cloud-starter-oauth2:2.0.0.RELEASE"
            dependency "org.springframework.security:spring-security-jwt:1.0.9.RELEASE"
            dependency "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"
            dependency "org.passay:passay:1.3.1"
            dependency "net.sourceforge.nekothml:nekothml:1.9.22"
            dependency "org.springdoc:springdoc-openapi-ui:1.2.34"
            dependency "org.springdoc:springdoc-openapi-kotlin:1.2.34"
            dependency "org.springdoc:springdoc-openapi-security:1.2.34"
            dependency "org.flywaydb.flyway-test-extensions:flyway-spring-test:5.0.0"

            dependency "org.webjars:jquery:3.2.0"
            dependency "org.webjars:bootstrap:4.1.3"
            dependency "org.webjars:font-awesome:5.4.1"

            dependency "com.deliveredtechnologies:rulebook-core:0.11"
            dependency "com.guigarage:flatter:0.7"
            dependency "com.lowagie:itext:2.1.7"
            dependency "org.olap4j:olap4j:1.2.0"
            dependency "net.sf.jasperreports:jasperreports-functions:6.2.2"
            dependency("net.sf.jasperreports:jasperreports:6.4.3") {
                exclude "com.lowagie:itext"
                exclude "org.olap4j:olap4j"
            }

            dependency "net.harawata:appdirs:1.0.1"

            // Testing libraries
            dependency "com.nhaarman:mockito-kotlin:1.6.0"
            dependency "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
            dependency "org.assertj:assertj-core:3.15.0"
            // Keep in sync with spring boots junit version
            dependency "org.junit.jupiter:junit-jupiter-params:5.6.0"
        }
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        // common testing libraries
        testImplementation "com.nhaarman:mockito-kotlin"
        testImplementation "org.jetbrains.kotlin:kotlin-test"
        testImplementation "org.assertj:assertj-core"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testRuntimeOnly 'org.junit.jupiter:junit-vintage-engine'
    }

    test {
        useJUnitPlatform {
            include 'junit-vintage'
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }
}

configure([project(':app:core'), project(':app:shared')]) {
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
    }
}

project(":app:dto") {
    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}
