# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- develop
- release/*
- hotfix/*

variables:
  spring_profiles_active: prod

jobs:

- job: Test

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:

  - task: Gradle@2
    displayName: Gradle Test
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'junitPlatformTest'


- job: Java
  condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')))

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:

  - task: NodeTool@0
    displayName: NodeJS Install
    inputs:
      versionSpec: '10.x'

  - script: git submodule update --init --remote --recursive
    displayName: Get submodules

  - task: Gradle@2
    displayName: Gradle Build
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'bootJar'

    env:
      spring_profiles_active: $(spring_profiles_active)

  - task: CopyFiles@2
    displayName: 'Copy jar File'
    inputs:
      sourceFolder: 'build/libs'
      contents: '*.jar'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: CopyFiles@2
    displayName: 'Copy release notes'
    inputs:
      sourceFolder: 'RelNotes'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Java artifact'
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'PSA Java'

- job: macOS
  condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')))

  pool:
    vmImage: 'macOS-10.13'

  steps:

    - task: NodeTool@0
      displayName: NodeJS Install
      inputs:
        versionSpec: '10.x'

    - script: git submodule update --init --remote --recursive
      displayName: Get submodules

    - task: Gradle@2
      displayName: Gradle Build
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        tasks: 'bundleNativeZip'
        options: '-Pmode=gui'

      env:
        spring_profiles_active: $(spring_profiles_active)

    - task: CopyFiles@2
      displayName: 'Copy macOS native'
      inputs:
        sourceFolder: 'build'
        contents: 'PSA_macOS.zip'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish macOS artifact'
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: 'PSA macOS'


- job: Windows
  condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')))

  pool:
    vmImage: 'vs2017-win2016'

  steps:

    - task: NodeTool@0
      displayName: NodeJS Install
      inputs:
        versionSpec: '10.x'

    - script: git submodule update --init --remote --recursive
      displayName: Get submodules

    - task: Gradle@2
      displayName: Gradle Build
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        tasks: 'bundleNativeZip'
        options: '-Pmode=gui'

      env:
        spring_profiles_active: $(spring_profiles_active)

    - task: CopyFiles@2
      displayName: 'Copy Windows native'
      inputs:
        sourceFolder: 'build'
        contents: 'PSA_Windows.zip'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Windows artifact'
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: 'PSA Windows'
