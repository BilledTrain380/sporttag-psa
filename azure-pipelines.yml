# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- develop
- release/*

jobs:

- job: test

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:

  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: azure-jdk-install.sh

  - script: ls $AGENT_TOOLSDIRECTORY

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '1.8'
      jdkFile: $(Agent.ToolsDirectory)/jdk-8u191-linux-x64.tar.gz
      jdkDestinationDirectory: $(Agent.ToolsDirectory)/Java8

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 'default'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'junitPlatformTest'

- job: Java
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/head/master'))

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'bootJar'